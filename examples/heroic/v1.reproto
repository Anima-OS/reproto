package heroic.v1;

use heroic.common as c;

enum TimeUnit {
  SECONDS("seconds", 1000),
  MINUTES("minutes", 60000);

  serialized_as number;

  name: string;
  number: u64;

  java {{
    public long toMilliseconds() {
      return this.number;
    }
  }}
}

interface Sampling {
}

tuple Point {
  timestamp: i64;
  value: double;
}

tuple Event {
  timestamp: i64;
  payload: any;
}

interface Samples {
  Points {
    name "points";
    name "points_backwards";

    data: [Point];
  }

  Events {
    name "events";

    data: [Event];
  }
}

type Query {
  query?: string;
  aggregation?: Aggregation;
  date?: c.Date;
  parameters?: {string: string};
}

interface Duration {
  Absolute {
    name "absolute";

    start: u64;
    end: u64;
  }
}

interface Aggregation {
  Sum {
    name "sum";

    sampling?: Sampling;
    size?: Duration;
    extent?: Duration;
  }

  Average {
    name "average";

    sampling?: Sampling;
    size?: Duration;
    extent?: Duration;
  }
}
