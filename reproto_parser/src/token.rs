use reproto_core::RpNumber;

#[derive(Debug)]
pub enum Error {
    UnterminatedString { start: usize },
    UnterminatedEscape { start: usize },
    InvalidEscape { message: &'static str, pos: usize },
    UnterminatedCodeBlock { start: usize },
    InvalidNumber { message: &'static str, pos: usize },
    Unexpected { pos: usize },
}

pub type Result<T> = ::std::result::Result<T, Error>;

#[derive(Clone, Debug, PartialEq)]
pub enum Token<'input> {
    Identifier(&'input str),
    TypeIdentifier(&'input str),
    DocComment(Vec<&'input str>),
    Number(RpNumber),
    Version(String),
    LeftCurly,
    RightCurly,
    LeftBracket,
    RightBracket,
    LeftParen,
    RightParen,
    SemiColon,
    Colon,
    Comma,
    Dot,
    Scope,
    QuestionMark,
    And,
    Slash,
    Equals,
    HashRocket,
    CodeOpen,
    CodeClose,
    CodeContent(&'input str),
    String(String),
    // identifier-style keywords
    InterfaceKeyword,
    TypeKeyword,
    EnumKeyword,
    TupleKeyword,
    ServiceKeyword,
    PackageKeyword,
    MatchKeyword,
    UseKeyword,
    AsKeyword,
    AnyKeyword,
    OnKeyword,
    FloatKeyword,
    DoubleKeyword,
    SignedKeyword,
    UnsignedKeyword,
    BooleanKeyword,
    StringKeyword,
    BytesKeyword,
    TrueKeyword,
    FalseKeyword,
    EndpointKeyword,
    ReturnsKeyword,
    AcceptsKeyword,
    Star,
    Tick,
    PathSegment(String),
}
